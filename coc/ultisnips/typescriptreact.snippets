# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet comp "React component"
import React from 'react'

type Props = {}

export class ${1} extends React.Component<Props> {
	render() {
		return (
			null
		)
	}
}
endsnippet

snippet react.fc "React function component"
import React from 'react';

type Props = {};

export const ${1:Component}: React.FC<Props> = () => (
  <div>
    $0
  </div>
);
endsnippet

snippet react.fc.default "React function component"
import React from 'react';

type Props = {};

const ${1:Component}: React.FC<Props> = () => (
  <div>
    $0
  </div>
);

export default $1;
endsnippet
